
@using System.Activities.Statements
@using System.Diagnostics.Eventing.Reader
@using GameStore.Web.ViewModels
@model IEnumerable<CommentViewModel>

@{
    ViewBag.Title = "Comments";
}

<link href='@Url.Content("~/Content/themes/base/jquery-ui.css")' rel="stylesheet" type="text/css" />

<h2>Comments</h2>

<ul class="menu">
    @foreach (var mp in Model.Where(x => x.ParentCommentId == (new Guid()).ToString()||string.IsNullOrEmpty(x.ParentCommentId)))
    {

        <li>
            @CreateCommentCard(mp)
            @if (Model.Count(p => p.ParentCommentId == mp.Id) > 0)
            {
                @:<ul>
            }

            @RenderMenuItem(Model.ToList(), mp)

            @if (Model.Count(p => p.ParentCommentId == mp.Id) > 0)
            {
                @:</ul>
            }

        </li>
    }
</ul>

@helper RenderMenuItem(List<CommentViewModel> menuList, CommentViewModel mi)
{
foreach (var cp in menuList.Where(p => p.ParentCommentId == mi.Id))
{


        @:<li>


            @CreateCommentCard(cp)
    if (menuList.Count(p => p.ParentCommentId == mi.Id) > 0)
    {
            @:<ul>
        }

        @RenderMenuItem(menuList, cp)

    if (menuList.Count(p => p.ParentCommentId == mi.Id) > 0)
    {
            @: </ul>
    }
    else
    {
            @: </li>
    }
}
}



@helper CreateCommentCard(CommentViewModel comment)
{
    <div class="comments">
        <div class="comment dialog">

            <span>@Html.ActionLink("Answer", "NewComment", "Comments", new { gameKey = Model.First().GameKey, parentId = comment.Id}, new { @class = "viewDialog", data_dialog_title = "Answer for "+comment.Name })</span>
            <span>@Html.ActionLink("Quote", "NewComment", "Comments", new { gameKey = Model.First().GameKey, parentId = comment.Id,  body = comment.Body }, new { @class = "viewDialog", data_dialog_title = "Answer for " + comment.Name })</span>
            
            

            <span>@Html.ActionLink("Delete", "Delete", "Comments", new { gameKey = Model.First().GameKey, commentId = comment.Id }, new { onclick= "return confirm('Delete this comment?')" })</span>



            <hr />
            <p>  <span>@Html.ActionLink("Ban", "Ban", "Comments", new { name = comment.Name })</span></p>
            <b> @comment.Name</b>
            

            <p>
                @if (!string.IsNullOrEmpty(comment.Quote))
                {
                    <p>

                        <blockquote>
                            @comment.Quote
                        </blockquote>
                    </p>
                }

                
                @if (comment.ParentCommentId != null)
                {
                    @comment.ParentCommentName
                }
                <p>
                    @comment.Body
                </p>
                </p>


            </div>
        </div>

}
<h3> @ViewBag.ErrorName  </h3>


    @Html.ActionLink("New Comment", "NewComment", "Comments", new {gameKey = ViewBag.GameKey}, new {@class = "viewDialog", data_dialog_title = "New comment"})




      
<script src='@Url.Content("~/Scripts/jquery-1.12.4.min.js")' type="text/javascript"></script>
<script src='@Url.Content("~/Scripts/jquery-ui-1.12.1.min.js")' type="text/javascript"></script>
<script>
    $(document)
        .ready(function() {

            $.ajaxSetup({ cache: false });

            $(".viewDialog")
                .on("click",
                    function(e) {
                        e.preventDefault();
                        $("<div id='dialogContent'></div>")
                            .addClass("dialog")
                            .appendTo("body")
                            .load(this.href)
                            .dialog({
                                title: $(this).attr("data-dialog-title"),
                                close: function() { $(this).remove() },
                                modal: true,
                                buttons: {
                                    "Save": function() {
                                        $.ajax({
                                            url: "@Url.Action("NewComment", "Comments")",
                                            type: "POST",
                                            data: $('form').serialize(),
                                            datatype: "json",
                                            success: function(result) {

                                                $("#dialogContent").html(result);
                                            }
                                        });
                                    }
                                }
                            });
                        $(".close")
                            .on("click",
                                function(e) {
                                    e.preventDefault();
                                    $(this).closest(".dialog").dialog("close");
                                });
                    });
        });
</script>



     
        <script src="~/scripts/jquery.unobtrusive-ajax.min.js"></script>
        <style>
            body {
                background: #f0f0f0;
            }

            .comments {
                width: 400px;
            }

            .comment {
                width: 100%;
                margin-bottom: 20px;
            }

                .comment p {
                    margin: 0 0 10px 0;
                }

            .dialog {
                position: relative;
                background: #fff;
                padding: 20px;
                color: #222;
                border-radius: 3px;
                margin-left: 20px;
            }

                .dialog::after {
                    content: '';
                    display: block;
                    position: absolute;
                    width: 0;
                    height: 0;
                    border-top: 8px solid transparent;
                    border-bottom: 8px solid transparent;
                    border-right: 15px solid #fff;
                    left: -15px;
                    top: 15px;
                }

            li {
                list-style-type: none;
            }
        </style>
